name: Daily Merge and Squash

on:
  schedule:
    # This cron job runs at 8:00 PM UTC every day
    - cron: '00 20 * * *'
  workflow_dispatch: 

jobs:
  merge-and-squash:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
        
      - name: Fetch branches
        run: |
          git fetch origin main
          git fetch origin dev

      - name: Check if dev has new changes
        id: check-changes
        run: |
          if git diff --quiet origin/main..origin/dev; then
            echo "new-changes=false" >> $GITHUB_ENV
          else
            echo "new-changes=true" >> $GITHUB_ENV
          fi

      - name: Exit if no new changes
        if: env.new-changes == 'false'
        run: |
          echo "No new changes on dev branch. Exiting."
          exit 0

      - name: Checkout dev branch
        if: env.new-changes == 'true'
        run: git checkout dev

      - name: Install dependencies and run tests
        if: env.new-changes == 'true'
        run: |
          npm install 
          npm run test

      - name: Fail if tests fail
        if: env.new-changes == 'true'
        run: |
          if [ $? -ne 0 ]; then
            echo "Tests failed. Exiting."
            exit 1
          fi

      - name: Merge dev into main with squash
        if: env.new-changes == 'true'
        run: |
          git checkout main
          if git merge --squash dev; then
            git commit -m "Squashed commits from dev" || echo "Nothing to commit, working tree clean."
            git push
          else
            echo "Nothing to squash. Already up to date."
            exit 0
          fi

          # Reset dev to match main to maintain shared history
          git checkout dev
          git reset --hard main
          git push --force-with-lease

      - name: Push changes to main
        if: env.new-changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} main

